{"version":3,"sources":["Question.js","QuestionNumbers.js","Scores.js","Results.js","Timer.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["renderers","code","value","style","a11yDark","language","children","Hr","borderTop","prevNextStyle","marginLeft","marginRight","backgroundColorForChoice","index","finished","answer","correct","Question","question","isFirst","isLast","onLast","onNext","onSubmit","useState","choice","setChoice","textAlign","borderRadius","margin","padding","boxShadow","Form","Group","Label","text","choices","map","idx","Check","disabled","undefined","type","label","name","String","onClick","backgroundColor","Button","variant","size","color","className","QuestionNumbers","questions","onChange","ButtonGroup","aria-label","Scores","scores","console","log","Table","striped","bordered","hover","initials","score","Results","filter","length","setInitials","fetching","setFetching","error","setError","setScores","show","setShow","Modal","onHide","Header","closeButton","Title","Body","Row","Col","md","InputGroup","FormControl","event","target","Footer","a","fetch","method","headers","body","JSON","stringify","response","json","sort","Jumbotron","height","width","Timer","timeLeft","setTimeLeft","useInterval","quiz","Quiz","setIndex","setFinished","setTimeout","timeoutId","setTimeoutId","setQuestions","handleSelect","selectedIndex","useEffect","Carousel","activeIndex","onSelect","controls","indicators","interval","Item","answerIndex","newTimeLeft","clearTimeout","marginTop","App","started","setStarted","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.016b39a8.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { a11yDark } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\n\nconst renderers = {\n  code: ({ value }) => <SyntaxHighlighter style={a11yDark} language=\"javascript\" children={value} />\n}\nconst Hr = () => <hr style={{ borderTop: \"1px solid rgba(0, 0, 0, 0.3)\" }} />;\nconst prevNextStyle = { marginLeft: 5, marginRight: 5 };\nconst backgroundColorForChoice = ({ answer, correct }, index, finished) => {\n  if(!finished) return \"white\";\n  if(answer !== correct && answer === index) return \"rgba(255, 0, 0, 0.3)\";\n  if(answer === index || correct === index) return \"rgba(0, 128, 0, 0.3)\";\n}\n\nexport default function Question({ question, finished, index, isFirst, isLast, onLast, onNext, onSubmit }) {\n  const [choice, setChoice] = useState(null);\n\n  return (\n    <div style={{\n      textAlign: \"left\",\n      borderRadius: 10,\n      margin: 20,\n      padding: 20,\n      boxShadow: \"5px 5px 10px 5px rgba(0, 0, 0, 0.5)\"\n    }}>\n      <Form.Group>\n        <Form.Label>\n          <ReactMarkdown renderers={renderers}>\n            {`#### ${index + 1}. ${question.text}`}\n          </ReactMarkdown>\n        </Form.Label>\n        <Hr />\n        {question.choices.map((choice, idx) => (\n          <Form.Check\n            disabled={finished || question.answer !== undefined  }\n            key={String(idx)}\n            type=\"radio\"\n            label={<ReactMarkdown>{choice}</ReactMarkdown>}\n            name={String(index)}\n            onClick={() => setChoice(idx)}\n            style={{ backgroundColor: backgroundColorForChoice(question, idx, finished) }}\n          />\n        ))}\n        <Hr />\n      </Form.Group>\n      {!isFirst && (\n        <Button variant=\"primary\" onClick={onLast} style={prevNextStyle}>\n          <FaArrowAltCircleLeft size={20} color=\"white\" />\n          {\" \"}\n          Previous\n        </Button>\n      )}\n      {!isLast && (\n        <Button variant=\"primary\" onClick={onNext} style={prevNextStyle}>\n          Next\n          {\" \"}\n          <FaArrowAltCircleRight size={20} color=\"white\" />\n        </Button>\n      )}\n      {question.answer === undefined && !finished && (\n        <Button className=\"float-right\" variant=\"success\" disabled={choice === null} onClick={() => onSubmit(choice)}>\n          Submit Answer\n        </Button>\n      )}\n    </div>\n  );\n}","import { Button, ButtonGroup } from \"react-bootstrap\";\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\n\nconst buttonLogo = ({ answer, correct }) => {\n  if(answer === correct) return <FaCheck size={10} color=\"white\" />\n  \n  return <FaTimes size={10} color=\"white\" />\n}\nconst variant = ({ answer, correct }, finished) => {\n  if(answer === correct) return \"success\";\n  if(answer !== undefined && answer !== correct) return \"danger\";\n  if(finished) return \"danger\";\n  \n  return \"primary\";\n}\n\nexport default function QuestionNumbers({ questions, finished, onChange }) {\n  return (\n    <ButtonGroup aria-label=\"Question Numbers\">\n      {questions.map((question, index) => (\n        <Button\n          key={String(index)}\n          variant={variant(question, finished)}\n          style={{ marginLeft: 5, marginRight: 5 }}\n          onClick={() => onChange(index)}\n        >\n          {(question.answer !== undefined || finished) && buttonLogo(question)}\n          {\" \"}\n          {index + 1}\n        </Button>\n      ))}\n    </ButtonGroup>\n  );\n}","import { Table } from \"react-bootstrap\";\n\nexport default function Scores({ scores }) {\n  console.log(scores);\n  return (\n    <>\n      <h2>Scores</h2>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th>Initials</th>\n            <th>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scores.map(({ initials, score }, index) => (\n            <tr key={index}>\n              <td>{initials}</td>\n              <td>{score}</td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </>\n  );\n}","import { useState } from \"react\";\nimport { Jumbotron, Modal, Button, InputGroup, FormControl, Row, Col } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport Scores from \"./Scores\";\n\nexport default function Results({ questions }) {\n  const correct = questions.filter(question => question.answer === question.correct).length;\n  const score = (correct / questions.length) * 100;\n  const [initials, setInitials] = useState(null);\n  const [fetching, setFetching] = useState(false);\n  const [error, setError] = useState(false);\n  const [scores, setScores] = useState(null);\n  const [show, setShow] = useState(true);\n  const handleClose = () => setShow(false);\n\n  return (\n    <>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Enter Your Initials</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <Row>\n          <Col md={4} />\n          <Col md={4}>\n            <InputGroup>\n              <FormControl onChange={event => setInitials(event.target.value)} />\n            </InputGroup>\n          </Col>\n          <Col md={4} />\n        </Row>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button\n            variant=\"primary\"\n            disabled={!initials || initials === \"\"}\n            onClick={async () => {\n              setFetching(true);\n              setShow(false);\n              try {\n                const response = await fetch(\"/api/scores\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({ score, initials })\n                });\n\n                setError(false);\n                setFetching(false);\n                setScores((await response.json()).sort(({ score: score1 }, { score: score2 }) => score1 < score2));\n              } catch {\n                setError(true);\n                setFetching(false);\n              }\n            }}\n          >\n            Submit Score\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      <Jumbotron>\n        <h1>{score} %</h1>\n        <p>{correct} / {questions.length} questions answered correctly</p>\n        {correct !== questions.length && <p>Scroll down to review quiz</p>}\n        {fetching && <Loader type=\"Puff\" color=\"black\" height={100} width={100} />}\n        {error && \"Unable to fetch / submit score\"}\n        {scores && <Scores scores={scores} />}\n      </Jumbotron>\n    </>\n  );\n}","import useInterval from \"@use-it/interval\";\n\nexport default function Timer({ timeLeft, setTimeLeft }) {\n  useInterval(() => setTimeLeft(timeLeft - 1), 1000);\n\n  return <h2>{timeLeft} Seconds</h2>\n}","import { useState, useEffect } from \"react\";\nimport { Carousel, Row, Col, Button } from \"react-bootstrap\";\nimport Question from \"./Question\";\nimport QuestionNumbers from \"./QuestionNumbers\";\nimport Results from \"./Results\";\nimport Timer from \"./Timer\";\n\nconst quiz = [\n  {\n    text: \"In JavaScript, you can't assign a `function` to a variable.\",\n    choices: [\"True\", \"False\"],\n    correct: 1,\n    answer: undefined\n  },\n  {\n    text: \"What method is used to return a `Promise` with a given value?\",\n    choices: [\"`accept()`\", \"`then()`\", \"`finally()`\", \"`resolve()`\"],\n    correct: 3,\n    answer: undefined\n  },\n  {\n    text: `What is the value of \\`sum\\` after the loop?     \n\n    let sum = 0;\n    for(var i = 0; i < 5; i++) {\n      sum += i % 2 === 0 ? 10 : 0;\n    }`,\n    choices: [\"20\", \"30\", \"0\", \"10\"],\n    correct: 1,\n    answer: undefined\n  },\n  {\n    text: \"Which data type holds `true` and `false` values?\",\n    choices: [\"`String`\", \"`boolean`\", \"`Object`\", \"`Number`\"],\n    correct: 1,\n    answer: undefined\n  },\n  {\n    text: `What is the value of \\`indicator\\`?\n    \n    const indicator = 2 == \"2\";`,\n    choices: [\"`null`\", \"0\", \"`true`\", \"`false`\"],\n    correct: 2,\n    answer: undefined\n  },\n  {\n    text: \"Node.js applications cannot run in a web browser.\",\n    choices: [\"True\", \"False\"],\n    correct: 0,\n    answer: undefined\n  },\n  {\n    text: \"Which of the follwing is an alternative package manager to NPM?\",\n    choices: [\"Webpack\", \"Gulp\", \"Yarn\", \"package.json\"],\n    correct: 2,\n    answer: undefined\n  },\n  {\n    text: \"Which of the following is a valid method used for fetching initial data in React?\",\n    choices: [\"`componentDidMount()`\", \"`setState()`\", \"`document.onload()`\", \"`document.ready()`\"],\n    correct: 0,\n    answer: undefined\n  },\n  {\n    text: \"JavaScript has a garbage collector to reclaim unused memory.\",\n    choices: [\"True\", \"False\"],\n    correct: 0,\n    answer: undefined\n  },\n  {\n    text: \"In the context of async / await, how do you handle errors?\",\n    choices: [\"`await`\", \"`reject`\", \"`catch`\", \"`then`\"],\n    correct: 2,\n    answer: undefined\n  }\n];\n\nexport default function Quiz() {\n  const [index, setIndex] = useState(0);\n  const [timeLeft, setTimeLeft] = useState(180);\n  const [finished, setFinished] = useState(false);\n  const [timeoutId, setTimeoutId] = useState(setTimeout(() => setFinished(true), timeLeft * 1000));\n  const [questions, setQuestions] = useState(quiz);\n  const handleSelect = selectedIndex => setIndex(selectedIndex);\n\n  useEffect(() => {\n    if(questions.filter(question => question.answer !== undefined).length === questions.length) setFinished(true);\n  }, [questions]);\n\n  return (\n    <Row>\n      <Col md={3} />\n      <Col md={6}>\n        {finished ? <Results questions={questions} /> : <Timer timeLeft={timeLeft} setTimeLeft={setTimeLeft} />}\n        <Carousel activeIndex={index} onSelect={handleSelect} controls={false} indicators={false} interval={1000*60*60*24}>\n          {questions.map((question, index) => (\n            <Carousel.Item key={String(index)}>\n              <Question\n                question={question}\n                finished={finished}\n                index={index}\n                isFirst={index === 0}\n                isLast={index === questions.length - 1}\n                onLast={() => setIndex(index - 1)}\n                onNext={() => setIndex(index + 1)}\n                onSubmit={answerIndex => {\n                  questions[index].answer = answerIndex;\n                  setQuestions([...questions]);\n\n                  if(questions[index].correct !== answerIndex) {\n                    const newTimeLeft = timeLeft - 10;\n\n                    setTimeLeft(newTimeLeft);\n                    clearTimeout(timeoutId);\n                    setTimeoutId(setTimeout(() => setFinished(true), newTimeLeft * 1000));\n                  }\n                  if(index !== questions.length - 1) setIndex(index + 1);\n              }} />\n            </Carousel.Item>\n          ))}\n        </Carousel>\n        <QuestionNumbers questions={questions} finished={finished} onChange={handleSelect} />\n        <br />\n        {!finished &&\n          <Button\n            variant=\"success\"\n            size=\"lg\"\n            style={{ marginTop: 5 }}\n            onClick={() => {\n              setFinished(true);\n              setIndex(0);\n            }}>\n            Submit Quiz\n          </Button>\n        }\n      </Col>\n      <Col md={3} />\n    </Row>\n  );\n}","import { useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { FaRegClock } from \"react-icons/fa\";\nimport Quiz from \"./Quiz\";\nimport \"./App.css\";\n\nfunction App() {\n  const [started, setStarted] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h2>Coding Quiz</h2>\n      {started ? <Quiz /> :\n        <Button variant=\"primary\" onClick={() => setStarted(true)}>\n          <p>Start Quiz</p>\n          3 Minutes\n          {\" \"}\n          <FaRegClock size={20} color=\"white\" />\n        </Button>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}